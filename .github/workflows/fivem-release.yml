name: FiveM Auto Version & Release

on:
  workflow_call:

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version
        id: bump_version
        run: |
          # Check if fxmanifest.lua exists
          if [ ! -f "fxmanifest.lua" ]; then
            echo "❌ fxmanifest.lua not found!"
            exit 1
          fi

          OLD_VERSION=$(grep -E "version ['\"][0-9]+\.[0-9]+\.[0-9]+['\"]" fxmanifest.lua | head -n 1 | sed -E "s/.*version ['\"]([0-9]+\.[0-9]+\.[0-9]+)['\"].*/\1/")
          if [ -z "$OLD_VERSION" ]; then
            echo "❌ Version not found in fxmanifest.lua!"
            exit 1
          fi
          echo "✅ Old version: $OLD_VERSION"

          CUSTOM_VERSION="$(git log -1 --pretty=%B | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')"

          if [ -n "$CUSTOM_VERSION" ]; then
            NEW_VERSION=$CUSTOM_VERSION
          else
            IFS='.' read -r major minor patch <<< "$OLD_VERSION"
            patch=$((patch + 1))
            if [ "$patch" -gt 9 ]; then
              patch=0
              minor=$((minor + 1))
            fi
            if [ "$minor" -gt 9 ]; then
              minor=0
              major=$((major + 1))
            fi
            NEW_VERSION="${major}.${minor}.${patch}"
          fi

          # Verify the substitution worked
          if sed -i -E "s/version ['\"][0-9]+\.[0-9]+\.[0-9]+['\"]/version '$NEW_VERSION'/" fxmanifest.lua; then
            echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
            echo "✅ New version: $NEW_VERSION"
          else
            echo "❌ Failed to update version in fxmanifest.lua"
            exit 1
          fi

      - name: Commit updated manifest
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Bump version to ${{ steps.bump_version.outputs.new_version }}"

      - name: Prepare Escrow Version
        run: |
          mkdir -p escrow_version
          rsync -av --exclude='.git' --exclude='escrow_version' --exclude='open_source_version' ./ escrow_version/

      - name: Prepare Open Source Version
        run: |
          mkdir -p open_source_version
          rsync -av --exclude='.git' --exclude='escrow_version' --exclude='open_source_version' ./ open_source_version/
          sed -i '/escrow_ignore {/,/}/ s/^/--/' open_source_version/fxmanifest.lua
          echo -e "escrow_ignore {\n    '**.**',\n    '**/**',\n    '**/**/**'\n}" >> open_source_version/fxmanifest.lua

      - name: Create ZIP archives
        run: |
          zip -r escrow_version.zip escrow_version
          zip -r open_source_version.zip open_source_version

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          files: |
            escrow_version.zip
            open_source_version.zip
